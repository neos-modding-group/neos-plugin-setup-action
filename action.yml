name: Setup Neos Plugin Build Environment
description: Install .NET and Neos
runs:
  using: "composite"
  steps:
    - name: get latest Neos version
      run: |
        REMOTE_NEOS_VERSION="$(curl -fs https://cloudxstorage.blob.core.windows.net/install/Pro/Public)"
        echo "Remote Neos version is: \"$REMOTE_NEOS_VERSION\""
        if [ "$REMOTE_NEOS_VERSION" = "" ]; then
          echo "REMOTE_NEOS_VERSION is empty"
          exit 1
        fi
        echo "REMOTE_NEOS_VERSION=$REMOTE_NEOS_VERSION" >> $GITHUB_ENV
      shell: bash
    - name: setup Neos install cache
      id: cache
      uses: actions/cache@v3
      with:
        path: neos_install/
        key: neos_install_${{ env.REMOTE_NEOS_VERSION }}
    - name: setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    - name: install p7zip
      if: steps.cache.outputs.cache-hit != 'true'
      run: sudo apt-get install -y p7zip-full
      shell: bash
    - name: install refasmer
      if: steps.cache.outputs.cache-hit != 'true'
      run: dotnet tool install -g JetBrains.Refasmer.CliTool
      shell: bash
    - name: download Neos
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir neos_install
        cd neos_install
        curl -fs "https://assets.neos.com/install/Pro/Data/${{ env.REMOTE_NEOS_VERSION }}.7z" -o neos.7z
        7za x neos.7z
        rm neos.7z
      shell: bash
    - name: prune
      if: steps.cache.outputs.cache-hit != 'true'
      run: find . -type f -not -name '*.dll' -and -not -name '*.pdb' -delete
      shell: bash
      working-directory: neos_install
    - name: hollow
      if: steps.cache.outputs.cache-hit != 'true'
      run: refasmer -wgmc '**/*.dll'
      shell: bash
      working-directory: neos_install
